import { Prediction, StringDict } from "../../../parsing/common";
import { EnergyBillV1EnergySupplier } from "./energyBillV1EnergySupplier";
import { EnergyBillV1EnergyConsumer } from "./energyBillV1EnergyConsumer";
import { EnergyBillV1Subscription } from "./energyBillV1Subscription";
import { EnergyBillV1EnergyUsage } from "./energyBillV1EnergyUsage";
import { EnergyBillV1TaxesAndContribution } from "./energyBillV1TaxesAndContribution";
import { EnergyBillV1MeterDetail } from "./energyBillV1MeterDetail";
import { AmountField, DateField, StringField } from "../../../parsing/standard";
/**
 * Energy Bill API version 1.0 document data.
 */
export declare class EnergyBillV1Document implements Prediction {
    /** The unique identifier associated with a specific contract. */
    contractId: StringField;
    /**
     * The unique identifier assigned to each electricity or gas consumption point. It specifies the exact location where
     * the energy is delivered.
     */
    deliveryPoint: StringField;
    /** The date by which the payment for the energy invoice is due. */
    dueDate: DateField;
    /** The entity that consumes the energy. */
    energyConsumer: EnergyBillV1EnergyConsumer;
    /** The company that supplies the energy. */
    energySupplier: EnergyBillV1EnergySupplier;
    /** Details of energy consumption. */
    energyUsage: EnergyBillV1EnergyUsage[];
    /** The date when the energy invoice was issued. */
    invoiceDate: DateField;
    /** The unique identifier of the energy invoice. */
    invoiceNumber: StringField;
    /** Information about the energy meter. */
    meterDetails: EnergyBillV1MeterDetail;
    /** The subscription details fee for the energy service. */
    subscription: EnergyBillV1Subscription[];
    /** Details of Taxes and Contributions. */
    taxesAndContributions: EnergyBillV1TaxesAndContribution[];
    /** The total amount to be paid for the energy invoice. */
    totalAmount: AmountField;
    /** The total amount to be paid for the energy invoice before taxes. */
    totalBeforeTaxes: AmountField;
    /** Total of taxes applied to the invoice. */
    totalTaxes: AmountField;
    constructor(rawPrediction: StringDict, pageId?: number);
    /**
     * Default string representation.
     */
    toString(): string;
}
