"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.floatToString = exports.cleanSpecialChars = exports.lineSeparator = exports.cleanOutString = void 0;
function cleanOutString(outStr) {
    const lines = / \n/gm;
    return outStr.replace(lines, "\n");
}
exports.cleanOutString = cleanOutString;
/**
 *
 * @param columnSizes Size of each column in the table
 * @param separator character for a separator
 * @returns A separator for table lines
 */
function lineSeparator(columnSizes, separator) {
    let outStr = "  +";
    columnSizes.forEach((size) => {
        outStr += separator.repeat(size) + "+";
    });
    return outStr;
}
exports.lineSeparator = lineSeparator;
/**
 * Replaces all special characters like \n, \r, \t, with an equivalent that can be displayed on a single line.
 * Also trims line breaks at the end of the string.
 * @param outStr
 */
function cleanSpecialChars(outStr) {
    return outStr
        .replace(/\n/g, "\\n")
        .replace(/\r/g, "\\r")
        .replace(/\t/g, "\\t");
}
exports.cleanSpecialChars = cleanSpecialChars;
/**
 * Return a float as a string with at least 2 levels of precision.
 */
function floatToString(value) {
    if (value === null) {
        return "";
    }
    return value.toLocaleString(undefined, {
        minimumFractionDigits: 2,
        maximumFractionDigits: 5,
        useGrouping: false,
    });
}
exports.floatToString = floatToString;
